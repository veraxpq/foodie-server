<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foodie.domain.client.UserInfoMapper">
  <resultMap id="BaseResultMap" type="foodie.domain.model.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="day_of_birth" jdbcType="TIMESTAMP" property="dayOfBirth" />
    <result column="saved_restaurants" jdbcType="VARCHAR" property="savedRestaurants" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, email, password, zip_code, user_type, avatar, description, day_of_birth, saved_restaurants, 
    username
  </sql>
  <select id="selectByExample" parameterType="foodie.domain.model.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="foodie.domain.model.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="foodie.domain.model.UserInfo">
    insert into user_info (id, email, password, 
      zip_code, user_type, avatar, 
      description, day_of_birth, saved_restaurants, 
      username)
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{zipCode,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{dayOfBirth,jdbcType=TIMESTAMP}, #{savedRestaurants,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="foodie.domain.model.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="dayOfBirth != null">
        day_of_birth,
      </if>
      <if test="savedRestaurants != null">
        saved_restaurants,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="dayOfBirth != null">
        #{dayOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="savedRestaurants != null">
        #{savedRestaurants,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="foodie.domain.model.UserInfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        zip_code = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.dayOfBirth != null">
        day_of_birth = #{record.dayOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="record.savedRestaurants != null">
        saved_restaurants = #{record.savedRestaurants,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      day_of_birth = #{record.dayOfBirth,jdbcType=TIMESTAMP},
      saved_restaurants = #{record.savedRestaurants,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="foodie.domain.model.UserInfo">
    update user_info
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="dayOfBirth != null">
        day_of_birth = #{dayOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="savedRestaurants != null">
        saved_restaurants = #{savedRestaurants,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="foodie.domain.model.UserInfo">
    update user_info
    set email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      day_of_birth = #{dayOfBirth,jdbcType=TIMESTAMP},
      saved_restaurants = #{savedRestaurants,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="foodie.domain.model.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>